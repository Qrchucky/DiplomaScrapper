{"version":3,"sources":["../../src/lib/OtoDomScrapper.js"],"names":["getOtoDomScrape","rentOffersObj","buyOffersObj","getOtoDomOffersObj","url","axios","get","html","data","$","cheerio","load","offers","pageLimiter","children","prev","text","pageLimit","parseInt","offerType","includes","dt","Date","offersFromMongoDB","Offer","find","sort","scrapeDate","exec","console","log","lastScrapedOfferLink","length","link","arrayFromScrapes","offersObj","i","currentLink","attr","push","title","replace","img","price","type","localization","date","nextPageNumber","match","nextUrl","require","mongoose","model"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAMA;;sFACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACuBA,gBAC1B,2DAD0B,CADvB;;AAAA;AACCC,yBADD;AAAA;AAAA,mBAIsBD,gBACzB,4DADyB,CAJtB;;AAAA;AAICE,wBAJD;AAAA,wFAOMD,aAPN,oCAOwBC,YAPxB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,kB;;;;;AAUtB;;;;uFACO,kBAA+BC,GAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBC,MAAMC,GAAN,CAAUF,GAAV,CADxB;;AAAA;AAAA;AACSG,gBADT,SACGC,IADH;AAECC,aAFD,GAEKC,QAAQC,IAAR,CAAaJ,IAAb,CAFL;AAGCK,kBAHD,GAGUH,EAAE,2CAAF,CAHV;;AAKL;;AACMI,uBAND,GAMeJ,EAAE,QAAF,EAAYK,QAAZ,CAAqB,aAArB,EAAoCC,IAApC,GAA2CC,IAA3C,EANf;AAOCC,qBAPD,GAOaC,SAASL,WAAT,CAPb;;AASL;;AACMM,qBAVD,GAUaV,EAAE,4BAAF,EAAgCO,IAAhC,GAAuCI,QAAvC,CAAgD,UAAhD,IACd,UADc,GAEd,SAZC;AAcCC,cAdD,GAcM,IAAIC,IAAJ,EAdN;AAgBDC,6BAhBC;AAAA;AAAA;AAAA,mBAmBuBC,MAAMC,IAAN,GAAaC,IAAb,CAAkB,EAAEC,YAAY,CAAC,CAAf,EAAlB,EAAsCC,IAAtC,EAnBvB;;AAAA;AAmBHL,6BAnBG;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAqBHM,oBAAQC,GAAR;;AArBG;AAwBCC,gCAxBD,GAyBHR,kBAAkBS,MAAlB,KAA6B,CAA7B,GACIT,kBAAkBA,kBAAkBS,MAAlB,GAA2B,CAA7C,EAAgDC,IADpD,GAEI,EA3BD;;AA6BL;;AACMC,4BA9BD,GA8BoB,oBAAWtB,MAAX,CA9BpB;AA+BCuB,qBA/BD,GA+Ba,EA/Bb;AAiCIC,aAjCJ,GAiCQ,CAjCR;;AAAA;AAAA,kBAiCWA,IAAIF,iBAAiBF,MAjChC;AAAA;AAAA;AAAA;;AAkCGK,uBAlCH,GAkCiB5B,EAAEyB,iBAAiBE,CAAjB,CAAF,EAAuBE,IAAvB,CAA4B,UAA5B,CAlCjB;;AAAA,kBAoCCD,gBAAgBN,oBApCjB;AAAA;AAAA;AAAA;;AAqCDI,sBAAUI,IAAV,CAAe;AACbC,qBAAO/B,EAAEyB,iBAAiBE,CAAjB,CAAF,EACJX,IADI,CACC,mBADD,EAEJT,IAFI,GAGJyB,OAHI,CAGI,QAHJ,EAGc,EAHd,CADM;AAKbR,oBAAMxB,EAAEyB,iBAAiBE,CAAjB,CAAF,EAAuBE,IAAvB,CAA4B,UAA5B,CALO;AAMbI,mBAAKjC,EAAEyB,iBAAiBE,CAAjB,CAAF,EAAuBX,IAAvB,CAA4B,YAA5B,EAA0CiB,GANlC;AAObC,qBAAOlC,EAAEyB,iBAAiBE,CAAjB,CAAF,EACJX,IADI,CACC,mBADD,EAEJT,IAFI,GAGJyB,OAHI,CAGI,QAHJ,EAGc,EAHd,EAIJA,OAJI,CAII,KAJJ,EAIW,EAJX,CAPM;AAYbG,oBACEnC,EAAEyB,iBAAiBE,CAAjB,CAAF,EAAuBX,IAAvB,CAA4B,yBAA5B,EAAuDT,IAAvD,OACA,yBADA,GAEI,sBAFJ,GAGI,uBAhBO;AAiBb6B,4BAAcpC,EAAEyB,iBAAiBE,CAAjB,CAAF,EACXX,IADW,CACN,kCADM,EAEXT,IAFW,GAGXyB,OAHW,CAGH,QAHG,EAGO,EAHP,EAIXA,OAJW,CAKVhC,EAAEyB,iBAAiBE,CAAjB,CAAF,EAAuBX,IAAvB,CAA4B,yBAA5B,EAAuDT,IAAvD,EALU,EAMV,EANU,CAjBD;AAyBb8B,oBAAM;AAzBO,aAAf;AArCC;AAAA;;AAAA;AAAA;;AAAA;AAiCwCV,eAjCxC;AAAA;AAAA;;AAAA;AAAA,kBAsEDD,UAAUH,MAAV,GAAmB,CAtElB;AAAA;AAAA;AAAA;;AAAA,8CAuEIG,SAvEJ;;AAAA;AAyEH;AACMY,0BA1EH,GA0EoB7B,SAASd,IAAI4C,KAAJ,CAAU,aAAV,EAAyB,CAAzB,CAAT,EAAsC,EAAtC,IAA4C,CA1EhE;AA2EH;;AA3EG,kBA4ECD,kBAAkB,EA5EnB;AAAA;AAAA;AAAA;;AA6EKE,mBA7EL,8BA6EwC9B,SA7ExC,mCA6E+E4B,cA7E/E;AA8ED;;AA9EC;AAAA,2BA+EUZ,SA/EV;AAAA;AAAA;AAAA,mBA+E+BnC,gBAAgBiD,OAAhB,CA/E/B;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,8CAiFMd,SAjFN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAenC,e;;;;;;;AAlBtB,IAAMK,QAAQ6C,QAAQ,OAAR,CAAd;AACA,IAAMxC,UAAUwC,QAAQ,SAAR,CAAhB;AACA,IAAMC,WAAWD,QAAQ,UAAR,CAAjB;AACAA,QAAQ,iBAAR;AACA,IAAM1B,QAAQ2B,SAASC,KAAT,CAAe,QAAf,CAAd","file":"OtoDomScrapper.js","sourcesContent":["const axios = require(\"axios\");\r\nconst cheerio = require(\"cheerio\");\r\nconst mongoose = require(\"mongoose\");\r\nrequire(\"../models/Offer\");\r\nconst Offer = mongoose.model(\"Offers\");\r\n\r\n// Starting point to scraping function\r\nexport async function getOtoDomOffersObj() {\r\n  const rentOffersObj = await getOtoDomScrape(\r\n    \"https://www.otodom.pl/wynajem/mieszkanie/katowice/?page=1\"\r\n  );\r\n  const buyOffersObj = await getOtoDomScrape(\r\n    \"https://www.otodom.pl/sprzedaz/mieszkanie/katowice/?page=1\"\r\n  );\r\n  return [...rentOffersObj, ...buyOffersObj];\r\n}\r\n\r\n// Scraping function\r\nexport async function getOtoDomScrape(url) {\r\n  const { data: html } = await axios.get(url);\r\n  const $ = cheerio.load(html);\r\n  const offers = $(\".section-listing__row-content .offer-item\");\r\n\r\n  // Get last page value\r\n  const pageLimiter = $(\".pager\").children(\".pager-next\").prev().text();\r\n  const pageLimit = parseInt(pageLimiter);\r\n\r\n  // Get offer type\r\n  const offerType = $(\".query-text .query-text-h1\").text().includes(\"sprzedaż\")\r\n    ? \"sprzedaz\"\r\n    : \"wynajem\";\r\n\r\n  const dt = new Date();\r\n\r\n  let offersFromMongoDB;\r\n\r\n  try {\r\n    offersFromMongoDB = await Offer.find().sort({ scrapeDate: -1 }).exec();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  const lastScrapedOfferLink =\r\n    offersFromMongoDB.length !== 0\r\n      ? offersFromMongoDB[offersFromMongoDB.length - 1].link\r\n      : \"\";\r\n\r\n  // Add only new offers to offersObj Array\r\n  const arrayFromScrapes = Array.from(offers);\r\n  const offersObj = [];\r\n\r\n  for (let i = 0; i < arrayFromScrapes.length; i++) {\r\n    const currentLink = $(arrayFromScrapes[i]).attr(\"data-url\");\r\n\r\n    if (currentLink !== lastScrapedOfferLink) {\r\n      offersObj.push({\r\n        title: $(arrayFromScrapes[i])\r\n          .find(\".offer-item-title\")\r\n          .text()\r\n          .replace(/\\s\\s+/g, \"\"),\r\n        link: $(arrayFromScrapes[i]).attr(\"data-url\"),\r\n        img: $(arrayFromScrapes[i]).find(\".img-cover\").img,\r\n        price: $(arrayFromScrapes[i])\r\n          .find(\".offer-item-price\")\r\n          .text()\r\n          .replace(/\\s\\s+/g, \"\")\r\n          .replace(\"/mc\", \"\"),\r\n        type:\r\n          $(arrayFromScrapes[i]).find(\".text-nowrap .hidden-xs\").text() ===\r\n          \"Mieszkanie na wynajem: \"\r\n            ? \"Mieszkania » Wynajem\"\r\n            : \"Mieszkania » Sprzedaż\",\r\n        localization: $(arrayFromScrapes[i])\r\n          .find(\".offer-item-header p.text-nowrap\")\r\n          .text()\r\n          .replace(/\\s\\s+/g, \"\")\r\n          .replace(\r\n            $(arrayFromScrapes[i]).find(\".text-nowrap .hidden-xs\").text(),\r\n            \"\"\r\n          ),\r\n        date: null,\r\n      });\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Recursive iteration through all pages the get all the data\r\n  if (offersObj.length < 1) {\r\n    return offersObj;\r\n  } else {\r\n    // Regex which creates next page number from current url\r\n    const nextPageNumber = parseInt(url.match(/page=(\\d+)$/)[1], 10) + 1;\r\n    // If we didnt reach last page\r\n    if (nextPageNumber <= 10) {\r\n      const nextUrl = `https://www.otodom.pl/${offerType}/mieszkanie/katowice/?page=${nextPageNumber}`;\r\n      // Concat new values to offersObj array\r\n      return [...offersObj, ...(await getOtoDomScrape(nextUrl))];\r\n    } else {\r\n      return offersObj;\r\n    }\r\n  }\r\n}\r\n"]}