{"version":3,"sources":["../../src/lib/OLXScrapper.js"],"names":["getOlxScrape","offersObj","getOlxOffersObj","url","axios","get","html","data","$","cheerio","load","offers","pageLimiter","pageLimit","parseInt","text","replace","dt","Date","offersFromMongoDB","Offer","find","sort","scrapeDate","exec","console","log","lastScrapedOfferLink","length","link","arrayFromScrapes","i","currentLink","attr","push","title","img","price","type","localization","parent","date","getFullYear","nextPageNumber","match","nextUrl","require","mongoose","model"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAMA;;sFACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBA,aACtB,8DADsB,CADnB;;AAAA;AACCC,qBADD;AAAA,6CAIEA,SAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,e;;;;;AAOtB;;;;uFACO,kBAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBC,MAAMC,GAAN,CAAUF,GAAV,CADxB;;AAAA;AAAA;AACSG,gBADT,SACGC,IADH;AAECC,aAFD,GAEKC,QAAQC,IAAR,CAAaJ,IAAb,CAFL;AAGCK,kBAHD,GAGUH,EAAE,8BAAF,CAHV;;AAKL;;AACMI,uBAND,GAMeJ,EAAE,4BAAF,CANf;AAOCK,qBAPD,GAOaC,SAASF,YAAYG,IAAZ,GAAmBC,OAAnB,CAA2B,QAA3B,EAAqC,EAArC,CAAT,CAPb;AASCC,cATD,GASM,IAAIC,IAAJ,EATN;AAWDC,6BAXC;AAAA;AAAA;AAAA,mBAcuBC,MAAMC,IAAN,GAAaC,IAAb,CAAkB,EAAEC,YAAY,CAAC,CAAf,EAAlB,EAAsCC,IAAtC,EAdvB;;AAAA;AAcHL,6BAdG;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAgBHM,oBAAQC,GAAR;;AAhBG;AAmBCC,gCAnBD,GAoBHR,kBAAkBS,MAAlB,KAA6B,CAA7B,GACIT,kBAAkBA,kBAAkBS,MAAlB,GAA2B,CAA7C,EAAgDC,IADpD,GAEI,EAtBD;;AAwBL;;AACMC,4BAzBD,GAyBoB,oBAAWnB,MAAX,CAzBpB;AA0BCV,qBA1BD,GA0Ba,EA1Bb;AA4BI8B,aA5BJ,GA4BQ,CA5BR;;AAAA;AAAA,kBA4BWA,IAAID,iBAAiBF,MA5BhC;AAAA;AAAA;AAAA;;AA6BGI,uBA7BH,GA6BiBxB,EAAEsB,iBAAiBC,CAAjB,CAAF,EACjBV,IADiB,CACZ,8BADY,EAEjBY,IAFiB,CAEZ,MAFY,CA7BjB;;AAAA,kBAiCCD,gBAAgBL,oBAjCjB;AAAA;AAAA;AAAA;;AAkCD1B,sBAAUiC,IAAV,CAAe;AACbC,qBAAO3B,EAAEsB,iBAAiBC,CAAjB,CAAF,EACJV,IADI,CACC,8BADD,EAEJN,IAFI,GAGJC,OAHI,CAGI,QAHJ,EAGc,EAHd,CADM;AAKba,oBAAMrB,EAAEsB,iBAAiBC,CAAjB,CAAF,EACHV,IADG,CACE,8BADF,EAEHY,IAFG,CAEE,MAFF,CALO;AAQbG,mBAAK5B,EAAEsB,iBAAiBC,CAAjB,CAAF,EAAuBV,IAAvB,CAA4B,KAA5B,EAAmCY,IAAnC,CAAwC,KAAxC,CARQ;AASbI,qBAAO7B,EAAEsB,iBAAiBC,CAAjB,CAAF,EAAuBV,IAAvB,CAA4B,kBAA5B,EAAgDN,IAAhD,EATM;AAUbuB,oBAAM9B,EAAEsB,iBAAiBC,CAAjB,CAAF,EACHV,IADG,CACE,qBADF,EAEHN,IAFG,GAGHC,OAHG,CAGK,QAHL,EAGe,EAHf,CAVO;AAcbuB,4BAAc/B,EAAEsB,iBAAiBC,CAAjB,CAAF,EACXV,IADW,CACN,+BADM,EAEXmB,MAFW,GAGXzB,IAHW,GAIXC,OAJW,CAIH,QAJG,EAIO,EAJP,CAdD;AAmBbyB,oBAASjC,EAAEsB,iBAAiBC,CAAjB,CAAF,EACNV,IADM,CACD,qBADC,EAENmB,MAFM,GAGNzB,IAHM,GAINC,OAJM,CAIE,YAJF,EAIgB,EAJhB,EAKNA,OALM,CAKE,IALF,EAKQ,GALR,CAAT,SAKyBC,GAAGyB,WAAH;AAxBZ,aAAf;AAlCC;AAAA;;AAAA;AAAA;;AAAA;AA4BwCX,eA5BxC;AAAA;AAAA;;AAAA;AAAA,kBAkED9B,UAAU2B,MAAV,GAAmB,CAlElB;AAAA;AAAA;AAAA;;AAAA,8CAmEI3B,SAnEJ;;AAAA;AAqEH;AACM0C,0BAtEH,GAsEoB7B,SAASX,IAAIyC,KAAJ,CAAU,aAAV,EAAyB,CAAzB,CAAT,EAAsC,EAAtC,IAA4C,CAtEhE;AAuEH;;AAvEG,kBAwECD,kBAAkB,EAxEnB;AAAA;AAAA;AAAA;;AAyEKE,mBAzEL,mEAyE6EF,cAzE7E;AA0ED;;AA1EC;AAAA,2BA2EU1C,SA3EV;AAAA;AAAA;AAAA,mBA2E+BD,aAAa6C,OAAb,CA3E/B;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,8CA6EM5C,SA7EN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeD,Y;;;;;;;AAftB,IAAMI,QAAQ0C,QAAQ,OAAR,CAAd;AACA,IAAMrC,UAAUqC,QAAQ,SAAR,CAAhB;AACA,IAAMC,WAAWD,QAAQ,UAAR,CAAjB;AACAA,QAAQ,iBAAR;AACA,IAAM1B,QAAQ2B,SAASC,KAAT,CAAe,QAAf,CAAd","file":"OLXScrapper.js","sourcesContent":["const axios = require(\"axios\");\r\nconst cheerio = require(\"cheerio\");\r\nconst mongoose = require(\"mongoose\");\r\nrequire(\"../models/Offer\");\r\nconst Offer = mongoose.model(\"Offers\");\r\n\r\n// Starting point to scraping function\r\nexport async function getOlxOffersObj() {\r\n  const offersObj = await getOlxScrape(\r\n    \"https://www.olx.pl/nieruchomosci/mieszkania/katowice/?page=1\"\r\n  );\r\n  return offersObj;\r\n}\r\n\r\n// Scraping function\r\nexport async function getOlxScrape(url) {\r\n  const { data: html } = await axios.get(url);\r\n  const $ = cheerio.load(html);\r\n  const offers = $(\"#offers_table .offer-wrapper\");\r\n\r\n  // Get last page value\r\n  const pageLimiter = $(\"[data-cy='page-link-last']\");\r\n  const pageLimit = parseInt(pageLimiter.text().replace(/\\s\\s+/g, \"\"));\r\n\r\n  const dt = new Date();\r\n\r\n  let offersFromMongoDB;\r\n\r\n  try {\r\n    offersFromMongoDB = await Offer.find().sort({ scrapeDate: -1 }).exec();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  const lastScrapedOfferLink =\r\n    offersFromMongoDB.length !== 0\r\n      ? offersFromMongoDB[offersFromMongoDB.length - 1].link\r\n      : \"\";\r\n\r\n  // Add only new offers to offersObj Array\r\n  const arrayFromScrapes = Array.from(offers);\r\n  const offersObj = [];\r\n\r\n  for (let i = 0; i < arrayFromScrapes.length; i++) {\r\n    const currentLink = $(arrayFromScrapes[i])\r\n      .find('[data-cy=\"listing-ad-title\"]')\r\n      .attr(\"href\");\r\n\r\n    if (currentLink !== lastScrapedOfferLink) {\r\n      offersObj.push({\r\n        title: $(arrayFromScrapes[i])\r\n          .find('[data-cy=\"listing-ad-title\"]')\r\n          .text()\r\n          .replace(/\\s\\s+/g, \"\"),\r\n        link: $(arrayFromScrapes[i])\r\n          .find('[data-cy=\"listing-ad-title\"]')\r\n          .attr(\"href\"),\r\n        img: $(arrayFromScrapes[i]).find(\"img\").attr(\"src\"),\r\n        price: $(arrayFromScrapes[i]).find(\".td-price strong\").text(),\r\n        type: $(arrayFromScrapes[i])\r\n          .find(\".title-cell p small\")\r\n          .text()\r\n          .replace(/\\s\\s+/g, \"\"),\r\n        localization: $(arrayFromScrapes[i])\r\n          .find(\"[data-icon='location-filled']\")\r\n          .parent()\r\n          .text()\r\n          .replace(/\\s\\s+/g, \"\"),\r\n        date: `${$(arrayFromScrapes[i])\r\n          .find(\"[data-icon='clock']\")\r\n          .parent()\r\n          .text()\r\n          .replace(/^\\s+|\\s+$/g, \"\")\r\n          .replace(\"  \", \"-\")}-${dt.getFullYear()}`,\r\n      });\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Recursive iteration through all pages the get all the data\r\n  if (offersObj.length < 1) {\r\n    return offersObj;\r\n  } else {\r\n    // Regex which creates next page number from current url\r\n    const nextPageNumber = parseInt(url.match(/page=(\\d+)$/)[1], 10) + 1;\r\n    // If we didnt reach last page\r\n    if (nextPageNumber <= 10) {\r\n      const nextUrl = `https://www.olx.pl/nieruchomosci/mieszkania/katowice/?page=${nextPageNumber}`;\r\n      // Concat new values to offersObj array\r\n      return [...offersObj, ...(await getOlxScrape(nextUrl))];\r\n    } else {\r\n      return offersObj;\r\n    }\r\n  }\r\n}\r\n"]}